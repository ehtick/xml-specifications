openapi: 3.0.0
info:
  title: SETU REST API - SUPPLIER PARTY
  description: >-
    This specification provides standardized APIs that a supplier for temporary staffing (in dutch Uitzendbureau) can 
    provide to their customers to support the SETU processes of elektronic data exchange. 
    The API is documented from the viewpoint of the consumer of the API (in this case the staffing customer)
  version: 1.0.0
servers:
  - url: 'https://api.yourorganization.nl/setu'
    description: Replace the host url and this description to your own organization API
      endpoint
tags:
  - name: Ordering and selection
    description: API regarding ordering and selection of temporary staffing personnel
    externalDocs:
      description: Find out more
      url: 'http://standaard.setu.nl'
  - name: Assignment
    description: API regarding assignments of temporary staffing personnel
    externalDocs:
      description: Find out more
      url: 'http://standaard.setu.nl'
  - name: Reporting time and expenses
    description: API regarding timecards of temporary staffing personnel
    externalDocs:
      description: Find out more
      url: 'http://standaard.setu.nl'
  - name: Invoicing
    description: API regarding invoicing of temporary staffing personnelt
    externalDocs:
      description: Find out more
      url: 'http://standaard.setu.nl'
paths:
  '/rfq':
    post:
      tags:
        - Ordering and selection
      summary: Request a quotation for a temporary staffing position.
      parameters:
        - $ref: '#/components/parameters/messageVersionStaffingOrder'
      requestBody:
        $ref: '#/components/requestBodies/orderrfq'
      responses:
        '200':
          $ref: '#/components/responses/200'
        '201':
          $ref: '#/components/responses/201'
        '202':
          $ref: '#/components/responses/202'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
        '503':
          $ref: '#/components/responses/503'
  '/rfq/{rfqId}':
    delete:
      tags:
        - Ordering and selection
      summary: Close/cancel a RFQ, because the position is fulfilled or does not need to be fulfilled anymore.
      parameters:
        - name: rfqId
          in: path
          description: Identifies the request for quotation
          required: true
          schema: 
            type: string
      responses:
        '204':
          $ref: '#/components/responses/204'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
        '503':
          $ref: '#/components/responses/503'
  '/offer/{offerId}/status':
    put:
      tags:
        - Ordering and selection
      summary: Accept/reject an offer.
      parameters:
        - name: offerId
          in: path
          description: Identifies the offer that must be accepted/rejected
          required: true
          schema: 
            type: string
      requestBody: 
        $ref: '#/components/requestBodies/offerStatus'
      responses:
        '200':
          $ref: '#/components/responses/200'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
        '503':
          $ref: '#/components/responses/503'
  '/order':
    post:
      tags:
        - Ordering and selection
      summary: Place an order for fulfillment of a temporary staffing position.
      parameters:
        - $ref: '#/components/parameters/messageVersionStaffingOrder'
      requestBody:
        $ref: '#/components/requestBodies/order'
      responses:
        '200':
          $ref: '#/components/responses/200'
        '201':
          $ref: '#/components/responses/201'
        '202':
          $ref: '#/components/responses/202'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
        '503':
          $ref: '#/components/responses/503'
  '/order/{orderId}':
    delete:
      tags:
        - Ordering and selection
      summary: Close/cancel an order, because the position is fulfilled or does not need to be fulfilled anymore.
      parameters:
        - name: rfqId
          in: path
          description: Identifies the order
          required: true
          schema: 
            type: string
      responses:
        '204':
          $ref: '#/components/responses/204'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
        '503':
          $ref: '#/components/responses/503'
  '/assignment/{assignmentId}/status':
    put:
      tags:
        - Assignment
      summary: Confirm or reject an assignment.
      parameters:
        - name: assignmentId
          in: path
          description: Identifies the assignment
          required: true
          schema: 
            type: string
      requestBody:
        $ref: '#/components/requestBodies/assignmentStatus'
      responses:
        '200':
          $ref: '#/components/responses/200'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
        '503':
          $ref: '#/components/responses/503'
  '/timecard':
    post:
      tags:
        - Reporting time and expenses
      summary: Send a timecard message.
      parameters:
        - $ref: '#/components/parameters/messageVersionTimecard'
      requestBody:
        $ref: '#/components/requestBodies/timecard'
      responses:
        '200':
          $ref: '#/components/responses/200'
        '201':
          $ref: '#/components/responses/201'
        '202':
          $ref: '#/components/responses/202'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
        '503':
          $ref: '#/components/responses/503'
  '/timecard/{timecardId}':
    put:
      tags:
        - Reporting time and expenses
      summary: Update a previously sent timecard.
      description: This operation allows to update/overwrite a previously sent timecard. The identifier therefore MUST be the same.
      parameters:
        - name: timecardId
          in: path
          description: The identifier of the previously sent timecard that must be updated
          required: true
          schema: 
            type: string
        - $ref: '#/components/parameters/messageVersionTimecard'
      requestBody:
        $ref: '#/components/requestBodies/timecard'
      responses:
        '200':
          $ref: '#/components/responses/200'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
        '503':
          $ref: '#/components/responses/503'
  '/invoice':
    post:
      tags:
        - Invoicing
      summary: Sent a self-billed invoice message (usually not supported by staffing suppliers).
      parameters:
        - $ref: '#/components/parameters/messageVersionInvoice'
      requestBody:
        $ref: '#/components/requestBodies/invoice'
      responses:
        '200':
          $ref: '#/components/responses/200'
        '201':
          $ref: '#/components/responses/201'
        '202':
          $ref: '#/components/responses/202'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
        '503':
          $ref: '#/components/responses/503'
  '/invoice/{invoiceId}/status':
    put:
      tags:
        - Invoicing
      summary: Confirm or reject a received invoice.
      parameters:
        - name: invoiceId
          in: path
          description: Identifies the received invoice
          required: true
          schema: 
            type: string
      requestBody:
        $ref: '#/components/requestBodies/invoiceStatus'
      responses:
        '200':
          $ref: '#/components/responses/200'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
        '503':
          $ref: '#/components/responses/503'
components:
  parameters:
    messageVersionStaffingOrder:
      name: messageVersion
      in: header
      description: Specification of the SETU standard version that is used as body message.
      required: true
      example: 'application/x.setu.staffing-order-v1.3+xml'
      schema:
        type: string
        enum:
          - 'application/x.setu.staffing-order-v1.0+xml'
          - 'application/x.setu.staffing-order-v1.1+xml'
          - 'application/x.setu.staffing-order-v1.2+xml'
          - 'application/x.setu.staffing-order-v1.3+xml'
    messageVersionHumanResource:
      name: messageVersion
      in: header
      description: Specification of the SETU standard version that is used as body message
      required: true
      example: 'application/x.setu.human-resource-v1.3+xml'
      schema:
        type: string
        enum:
          - 'application/x.setu.human-resource-v1.0+xml'
          - 'application/x.setu.human-resource-v1.1+xml'
          - 'application/x.setu.human-resource-v1.2+xml'
          - 'application/x.setu.human-resource-v1.3+xml'
    messageVersionAssignment:
      name: messageVersion
      in: header
      description: Specification of the SETU standard version that is used as body message
      required: true
      example: 'application/x.setu.assignment-v1.3+xml'
      schema:
        type: string
        enum:
          - 'application/x.setu.assignment-v1.0+xml'
          - 'application/x.setu.assignment-v1.1+xml'
          - 'application/x.setu.assignment-v1.2+xml'
          - 'application/x.setu.assignment-v1.3+xml'
    messageVersionTimecard:
      name: messageVersion
      in: header
      description: Specification of the SETU standard version that is used as body message
      required: true
      example: 'application/x.setu.timecard-v1.4+xml'
      schema:
        type: string
        enum:
          - 'application/x.setu.timecard-v1.0+xml'
          - 'application/x.setu.timecard-v1.1+xml'
          - 'application/x.setu.timecard-v1.2+xml'
          - 'application/x.setu.timecard-v1.3+xml'
          - 'application/x.setu.timecard-v1.4+xml'
    messageVersionInvoice:
      name: messageVersion
      in: header
      description: Specification of the SETU standard version that is used as body message
      required: true
      example: 'application/x.setu.invoice-v1.4+xml'
      schema:
        type: string
        enum:
          - 'application/x.setu.invoice-v1.0+xml'
          - 'application/x.setu.invoice-v1.1+xml'
          - 'application/x.setu.invoice-v1.2+xml'
          - 'application/x.setu.invoice-v1.3+xml'
          - 'application/x.setu.invoice-v1.4+xml'
          - 'application/x.setu.invoice-v2.0+xml'
  responses:
    '200':
      description: OK. Standard response for successful request
    '201':
      description: Created. Successful request, resource is created (synchronous)
    '202':
      description: Accepted. Successful request, resource is not (yet) created (asynchronous)
    '204':
      description: No Content. Response for a successful DELETE operation
    '400':
      description: >-
        Bad request. E.g. malformed XML syntax; missing mandatory parameter;
        invalid request body; unsupported version of request body.
    '401':
      description: Unauthorized. The request lacks valid authentication credentials for the resource
    '403':
      description: >-
        Forbidden. The request was valid, but the server is refusing action. 
        The user might not be authorized for the resource
    '404':
      description: Not Found.
    '500':
      description: Internal Server Error
    '503':
      description: Service Unavailable
  requestBodies:
    orderrfq:
      description: 'A StaffingOrder (RFQ) message as specified by SETU. See message specification here: https://setu.semantic-treehouse.nl/#/Message_32_model/MessageModel_c557ecea-1e1b-4997-9b90-f6aed797de2d'
      content:
        'application/xml':
          schema:
            type: object
            xml:
              name: StaffingOrder
              namespace: http://ns.hr-xml.org/2007-04-15
              prefix: hr-xml
          examples:
            orderrfq:
              summary: StaffingOrder (RFQ) example in XML
              value: "<StaffingOrder>...</StaffingOrder>"
      required: true
    order:
      description: 'A StaffingOrder (order) message as specified by SETU. See message specification here: https://setu.semantic-treehouse.nl/#/Message_32_model/MessageModel_c557ecea-1e1b-4997-9b90-f6aed797de2d' 
      content:
        'application/xml':
          schema:
            type: object
            xml:
              name: StaffingOrder
              namespace: http://ns.hr-xml.org/2007-04-15
              prefix: hr-xml
          examples:
            orderrfq:
              summary: StaffingOrder (order) example in XML
              value: "<StaffingOrder>...</StaffingOrder>"
      required: true
    offerStatus:
      content:
        'application/xml':
          schema:
            type: object
            xml:
              name: OfferStatus
            required:
              - status
            properties:
              status:
                type: string
                xml:
                  name: status
                description: status field indicating whether the offer is accepted or rejected
                enum:
                  - accepted
                  - rejected
              reason:
                type: string
                xml:
                  name: reason
                description: optional reason why the offer is accepted or rejected
      required: true
    assignmentStatus:
      description: >-
        Message to accept/reject a received assignment. Rejection is not allowed when 
        the assignment was previously confirmed nor when the first related Timecard is sent.
      content:
        'application/xml':
          schema:
            type: object
            xml:
              name: AssignmentStatus
            required:
              - status
            properties:
              status:
                type: string
                xml:
                  name: status
                enum:
                  - accepted
                  - rejected
              reason:
                type: string
                xml:
                  name: reason
                description: optional reason why the assignment is accepted or rejected
      required: true
    timecard:
      description: 'A Timecard message as specified by SETU. See message specification here: https://setu.semantic-treehouse.nl/#/Message_32_model/MessageModel_f1b8ba4d-9434-456f-94ac-031765cd36ea' 
      content:
        'application/xml':
          schema:
            type: object
            xml:
              name: TimeCard
              namespace: http://ns.hr-xml.org/2007-04-15
              prefix: hr-xml
          examples:
            orderrfq:
              summary: TimeCard example in XML
              value: "<TimeCard>...</TimeCard>"
      required: true
    invoice:
      description: 'An Invoice message as specified by SETU. Invoice messages according to v1.0-1.4 are formatted as HR-XML. As of v2.0 invoice messages use the UBL syntax. See message specification here: https://setu.semantic-treehouse.nl/#/Message_32_model/MessageModel_527939af-3e6c-436e-8a85-e749724a8742'
      content:
        'application/xml':
          schema:
            type: object
            xml:
              name: Invoice
      required: true
    invoiceStatus:
      content:
        'application/xml':
          schema:
            type: object
            xml:
              name: InvoiceStatus
            required:
              - status
            properties:
              status:
                type: string
                xml:
                  name: status
                enum:
                  - accepted
                  - rejected
              reason:
                type: string
                xml:
                  name: reason
                description: optional reason why the invoice is accepted or rejected
      required: true
externalDocs:
  description: Find out more about the SETU standards
  url: 'http://standaard.setu.nl'